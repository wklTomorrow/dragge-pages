version: 2
project_type: node
variables:
  GIT_CUR_BRANCH_NAME: $GIT_BRANCH
  GIT_CUR_COMMIT: $GIT_COMMIT
  GIT_CUR_AUTHOR: $GIT_AUTHOR
  GIT_CUR_MSG: $GIT_SUBJECT

stages:
  - install
  - lint
  - coverage
  - sonar
  - test-deploy
  - online-deploy

install:
  image: registry.cn-beijing.aliyuncs.com/yuanfd/yun_image-base:node16
  stage: install
  script:
    - echo "install dependencies"
    - pnpm install
  artifacts:
    name: install

lint-before-build:
  image: registry.cn-beijing.aliyuncs.com/yuanfd/yun_image-base:node16
  stage: lint
  dependencies:
    - install
  only:
    events:
      - patchset-created
  script:
    - npm run lint:report
  artifacts:
    name: lint-before-build-artifacts
    path:
      - eslint-report/**

coverage-before-build:
  image: registry.cn-beijing.aliyuncs.com/yuanfd/yun_image-base:node16
  stage: coverage
  allow_failure: true
  only:
    events:
      - patchset-created
  script:
    - npm run coverage
  dependencies:
    - install
  artifacts:
    name: coverage-before-build-artifacts
    path:
      - coverage/**

sonar:
  image: registry.cn-beijing.aliyuncs.com/yuanfd/yfd_sonar:8.9
  stage: sonar
  only:
    events:
      - patchset-created
  script:
    - bash -x yfd-sonar-scanner -Dsonar.typescript.lcov.reportPaths=coverage/lcov.info -Dsonar.eslint.reportPaths=eslint-report/report.json  -Dsonar.inclusions=packages/**/*,hooks/**,stores/**,services/**,utils/** -Dsonar.exclusions=**/*.html,**/*.css,**/*.json,packages/examples/** -Dsonar.test.inclusions=**/*.test.ts?,**/*.test.tsx?,**/*.spec.ts?,**/*.spec.tsx?,**/__test__/**/*,**/__tests__/**/* -Dsonar.coverage.exclusions=setupTests.ts,**/*.spec.tsx,**/*.spec.ts,**/service.ts,**/store/**
  dependencies:
    - lint-before-build
    - coverage-before-build

test-deploy:
  image: registry.cn-beijing.aliyuncs.com/yuanfd/yun_image-base:node16
  stage: test-deploy
  dependencies:
    - install
  only:
    branch:
      - deploy-test
  except:
    events:
      - patchset-created
  script:
    - echo "build & deploy project to test"
    - rm -rf dist
    - yun bundle test
  artifacts:
    name: test-deploy
    upload: true
    path:
      - dist/**
    tags:
      - test

online-deploy:
  image: registry.cn-beijing.aliyuncs.com/yuanfd/yun_image-base:node16
  stage: online-deploy
  dependencies:
    - install
  only:
    branch:
      - master
  except:
    events:
      - patchset-created
  script:
    - echo "build project online"
    - rm -rf dist
    - yun bundle production
  artifacts:
    name: online-deploy
    upload: true
    path:
      - dist/**
    tags:
      - online

